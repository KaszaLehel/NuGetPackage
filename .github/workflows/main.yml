# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
  NUGET_SOURCE_URL: "https://nuget.pkg.github.com/KaszaLehel/index.json"
  NUGET_VERSION: ${{ steps.semver.outputs.version }}


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    
    - name: Read current version number
      id: version
      run: echo ::set-output name=current::$(cat version.txt)

    - name: Increment version number
      id: semver
      uses: actions/semver@v1
      with:
        version: ${{ steps.version.outputs.current }}
        bump: patch

    - name: Write new version number to .csproj
      run: |
        find . -name "*.csproj" -type f -exec sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.semver.outputs.version }}<\/Version>/" {} +

    - name: Write new version number
      run: echo "${{ steps.semver.outputs.version }}" > version.txt

    - name: Restore packages
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore
    
    # --no-build
    - name: Pack Project
      run: dotnet pack --no-restore --configuration Release --include-symbols --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\output

    # - name: add Package
    #   run: dotnet nuget add source --username KaszaLehel --password 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 --store-password-in-clear-text --name gitnuget https://nuget.pkg.github.com/KaszaLehel/index.json

    - name: Push Package
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}**/*.nupkg -k ${{ secrets.NUGET_KEY_YML }} -s "https://nuget.pkg.github.com/KaszaLehel/index.json" --skip-duplicate
    # - name: Test  ${{ env.NUGET_SOURCE_URL }}
    #   run: dotnet test --no-build --verbosity normalcc
    # -s https://nuget.pkg.github.com/[USERNAME]/index.json ${{ secrets.NUGET_SECRET }},  ${{ env.PACKAGE_OUTPUT_DIRECTORY }}**/*.nupkg --api-key ${{ secrets.NUGET_SECRET }}

